# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Rust.gitlab-ci.yml

# Optional: Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: https://docs.gitlab.com/ee/ci/services/index.html

variables:
  POSTGRES_DB: royal-db
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: clickerroyale
  POSTGRES_HOST_AUTH_METHOD: trust
services:
  - postgres

stages:
  - clippy
  - cargo
  - node
  - deploy

clippy:
  variables:
    DATABASE_URL: postgresql://admin:clickerroyale@postgres:5432/royal-db
  image: "mrlooser98/rust_psql:latest"
  stage: clippy
  script:
    - rustup component add clippy
    - psql -h "postgres" -p "5432" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "$(cat clicker_backend/postgres/create_tables.sql)"
    - cd "clicker_backend"
    - cargo clippy -- -D warnings

# Use cargo to test the project
cargo:
  variables:
    DATABASE_URL: postgresql://admin:clickerroyale@postgres:5432/royal-db
  image: "mrlooser98/rust_psql:latest"
  stage: cargo
  script:
    - psql -h "postgres" -p "5432" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "$(cat clicker_backend/postgres/create_tables.sql)"
    - rustc --version && cargo --version # Print version info for debugging
    - cd "clicker_backend"
    - cargo test --workspace
    - echo "Test" > test123
    - ls -la
  artifacts:
    paths:
      - clicker_backend/test123
    expire_in: 1 day
    when: always
  cache:
    key: binaries
    paths:
      - clicker_backend/target

node:
  stage: node
  image: "node:latest"
  script:
    - node --version
    - cd clicker_frontend
    - npm i
    - npm run build
    - cd ../clicker_backend
    - cat test123

deploy:
  stage: deploy
  script: echo "Define your deployment script!"
  environment: production
